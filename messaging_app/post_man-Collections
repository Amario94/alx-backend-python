{"swagger": "2.0", "info": {"title": "Messaging API", "description": "API documentation for your messaging app", "termsOfService": "https://www.yourcompany.com/terms/", "contact": {"email": "support@yourcompany.com"}, "license": {"name": "MIT License"}, "version": "v1"}, "host": "127.0.0.1:8000", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/api-auth/conversations/": {"get": {"operationId": "api-auth_conversations_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Conversation"}}}}}}, "tags": ["api-auth"]}, "post": {"operationId": "api-auth_conversations_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["api-auth"]}, "parameters": []}, "/api-auth/conversations/{conversation_id}/": {"get": {"operationId": "api-auth_conversations_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["api-auth"]}, "put": {"operationId": "api-auth_conversations_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["api-auth"]}, "patch": {"operationId": "api-auth_conversations_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Conversation"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Conversation"}}}, "tags": ["api-auth"]}, "delete": {"operationId": "api-auth_conversations_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api-auth"]}, "parameters": [{"name": "conversation_id", "in": "path", "description": "A UUID string identifying this conversation.", "required": true, "type": "string", "format": "uuid"}]}, "/api-auth/messages/": {"get": {"operationId": "api-auth_messages_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Message"}}}}}}, "tags": ["api-auth"]}, "post": {"operationId": "api-auth_messages_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Message"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["api-auth"]}, "parameters": []}, "/api-auth/messages/{message_id}/": {"get": {"operationId": "api-auth_messages_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["api-auth"]}, "put": {"operationId": "api-auth_messages_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Message"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["api-auth"]}, "patch": {"operationId": "api-auth_messages_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Message"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["api-auth"]}, "delete": {"operationId": "api-auth_messages_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["api-auth"]}, "parameters": [{"name": "message_id", "in": "path", "description": "A UUID string identifying this message.", "required": true, "type": "string", "format": "uuid"}]}, "/api-auth/users/": {"get": {"operationId": "api-auth_users_list", "description": "", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}}}, "tags": ["api-auth"]}, "parameters": []}, "/api-auth/users/{user_id}/": {"get": {"operationId": "api-auth_users_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["api-auth"]}, "parameters": [{"name": "user_id", "in": "path", "description": "A UUID string identifying this user.", "required": true, "type": "string", "format": "uuid"}]}, "/api/token/": {"post": {"operationId": "api_token_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["api"]}, "parameters": []}, "/api/token/refresh/": {"post": {"operationId": "api_token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["api"]}, "parameters": []}}, "definitions": {"User": {"required": ["username", "email", "password"], "type": "object", "properties": {"user_id": {"title": "User id", "type": "string", "format": "uuid", "readOnly": true}, "last_login": {"title": "Last login", "type": "string", "format": "date-time", "x-nullable": true}, "is_superuser": {"title": "Superuser status", "description": "Designates that this user has all permissions without explicitly assigning them.", "type": "boolean"}, "username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "is_staff": {"title": "Staff status", "description": "Designates whether the user can log into this admin site.", "type": "boolean"}, "is_active": {"title": "Active", "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.", "type": "boolean"}, "date_joined": {"title": "Date joined", "type": "string", "format": "date-time"}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "password": {"title": "Password", "type": "string", "maxLength": 128, "minLength": 1}, "phone_number": {"title": "Phone number", "type": "string", "maxLength": 15, "x-nullable": true}, "name": {"title": "Name", "type": "string", "maxLength": 50, "x-nullable": true}, "first_name": {"title": "First name", "type": "string", "maxLength": 50, "x-nullable": true}, "last_name": {"title": "Last name", "type": "string", "maxLength": 50, "x-nullable": true}, "address": {"title": "Address", "type": "string", "maxLength": 50, "x-nullable": true}, "bio": {"title": "Bio", "type": "string", "maxLength": 50, "x-nullable": true}, "groups": {"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.", "type": "array", "items": {"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.", "type": "integer"}, "uniqueItems": true}, "user_permissions": {"description": "Specific permissions for this user.", "type": "array", "items": {"description": "Specific permissions for this user.", "type": "integer"}, "uniqueItems": true}}}, "Conversation": {"type": "object", "properties": {"conversation_id": {"title": "Conversation id", "type": "string", "format": "uuid", "readOnly": true}, "participants": {"type": "array", "items": {"$ref": "#/definitions/User"}, "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "Message": {"required": ["message_body", "conversation_id"], "type": "object", "properties": {"message_id": {"title": "Message id", "type": "string", "format": "uuid", "readOnly": true}, "sender": {"$ref": "#/definitions/User"}, "message_body": {"title": "Message body", "type": "string", "maxLength": 1000, "minLength": 1}, "sent_time": {"title": "Sent time", "type": "string", "readOnly": true}, "sent_at": {"title": "Sent at", "type": "string", "format": "date-time", "readOnly": true}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time", "readOnly": true}, "conversation_id": {"title": "Conversation id", "type": "string", "format": "uuid"}}}, "TokenObtainPair": {"required": ["email", "password"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}}}